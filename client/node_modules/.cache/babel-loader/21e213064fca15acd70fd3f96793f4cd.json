{"ast":null,"code":"var _jsxFileName = \"/home/dell/DSparty/redparty/client/src/components/Room/Room.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Container, Row, Col } from 'react-grid-system';\nimport Swal from 'sweetalert2';\nimport Topbar from '../common/Topbar';\nimport Player from './Player';\nimport Chat from './Chat/Chat';\nimport Options from './Options';\nimport { Spinner } from '../common/Spinner';\nimport { createConnection, bindSocketEvents } from '../../utils/socket';\nimport { getVideoId } from '../../utils/helper';\nimport { UserContext } from '../../contexts/UserContext';\nimport { SignalContext } from '../../contexts/SignalContext';\n\nfunction Room(props) {\n  const [isHost, setHost] = useState(false);\n  const [socket, setSocket] = useState(null);\n  const [roomLoading, setRoomLoading] = useState(true);\n  const {\n    dispatch: userDispatch,\n    userData\n  } = useContext(UserContext);\n  const {\n    dispatch: signalDispatch\n  } = useContext(SignalContext);\n  let _isHost = false;\n  let _socket = null;\n\n  const init = async () => {\n    const hostId = props.location.state && props.location.state.hostId;\n    const videoId = props.location.state && props.location.state.videoId;\n    let videoURL = props.location.state && props.location.state.videoURL;\n    let username = props.location.state && props.location.state.username;\n\n    if (!hostId) {\n      // Not a host\n      _isHost = false; // TODO: Show loading screen till connection is created\n\n      if (!username) {\n        // ask for username\n        const usernamePrompt = await Swal.fire({\n          title: 'Enter your display name',\n          input: 'text',\n          allowOutsideClick: false\n        });\n        username = usernamePrompt.value;\n      }\n\n      const roomId = props.match.params.id;\n      _socket = await createConnection(username, roomId);\n      console.log(\"fdf\", videoURL);\n    } else {\n      _isHost = true;\n      _socket = props.location.socket; // update videoid in global context\n\n      userDispatch({\n        type: 'UPDATE_VIDEO_ID',\n        videoId\n      });\n      showInviteModal();\n    } // update username in global context\n\n\n    userDispatch({\n      type: 'UPDATE_USERNAME',\n      username\n    });\n    setHost(_isHost);\n    setSocket(_socket);\n    bindSocketEvents(_socket, {\n      userDispatch,\n      signalDispatch\n    });\n    console.log('is host', isHost);\n    setRoomLoading(false);\n  };\n\n  useEffect(() => {\n    init();\n  }, // eslint-disable-next-line\n  []);\n\n  const showInviteModal = async () => {\n    await Swal.fire({\n      title: 'Invite friends with this link',\n      input: 'text',\n      inputValue: window.location.href,\n      confirmButtonText: 'Copy',\n      inputAttributes: {\n        readOnly: true\n      },\n      width: '40%',\n      onClose: () => {\n        document.getElementsByClassName('swal2-input')[0].select();\n        document.execCommand('copy');\n      }\n    });\n  };\n\n  const askVideoURL = async () => {\n    const {\n      value: url\n    } = await Swal.fire({\n      title: 'YouTube Video URL',\n      input: 'url',\n      inputPlaceholder: 'https://www.youtube.com/watch?v=BTYAsjAVa3I'\n    });\n    return url;\n  };\n\n  const onVideoChange = async () => {\n    const newURL = await askVideoURL();\n\n    if (newURL && socket) {\n      console.log(_socket);\n      const videoId = getVideoId(newURL);\n      socket.emit('changeVideo', {\n        videoId\n      });\n    }\n  };\n\n  const alertNotImplemented = () => {\n    alert('Not implemented');\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Topbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 4\n    }\n  }), roomLoading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    style: {\n      margin: '0 3%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Player, {\n    socket: socket,\n    videoId: userData.videoId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Options, {\n    onInvite: showInviteModal,\n    alertNotImplemented: alertNotImplemented,\n    onVideoChange: onVideoChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Chat, {\n    socket: socket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 8\n    }\n  })))));\n}\n\nexport default Room;","map":{"version":3,"sources":["/home/dell/DSparty/redparty/client/src/components/Room/Room.js"],"names":["React","useState","useEffect","useContext","Container","Row","Col","Swal","Topbar","Player","Chat","Options","Spinner","createConnection","bindSocketEvents","getVideoId","UserContext","SignalContext","Room","props","isHost","setHost","socket","setSocket","roomLoading","setRoomLoading","dispatch","userDispatch","userData","signalDispatch","_isHost","_socket","init","hostId","location","state","videoId","videoURL","username","usernamePrompt","fire","title","input","allowOutsideClick","value","roomId","match","params","id","console","log","type","showInviteModal","inputValue","window","href","confirmButtonText","inputAttributes","readOnly","width","onClose","document","getElementsByClassName","select","execCommand","askVideoURL","url","inputPlaceholder","onVideoChange","newURL","emit","alertNotImplemented","alert","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Container, Row, Col } from 'react-grid-system';\nimport Swal from 'sweetalert2';\nimport Topbar from '../common/Topbar';\nimport Player from './Player';\nimport Chat from './Chat/Chat';\nimport Options from './Options';\nimport { Spinner } from '../common/Spinner';\nimport { createConnection, bindSocketEvents } from '../../utils/socket';\nimport { getVideoId } from '../../utils/helper';\nimport { UserContext } from '../../contexts/UserContext';\nimport { SignalContext } from '../../contexts/SignalContext';\n\nfunction Room(props) {\n\tconst [isHost, setHost] = useState(false);\n\tconst [socket, setSocket] = useState(null);\n\tconst [roomLoading, setRoomLoading] = useState(true);\n\n\tconst { dispatch: userDispatch, userData } = useContext(UserContext);\n\tconst { dispatch: signalDispatch } = useContext(SignalContext);\n\n\tlet _isHost = false;\n\tlet _socket = null;\n\n\tconst init = async () => {\n\t\tconst hostId = props.location.state && props.location.state.hostId;\n\t\tconst videoId = props.location.state && props.location.state.videoId;\n\t\tlet videoURL = props.location.state && props.location.state.videoURL;\n\t\tlet username = props.location.state && props.location.state.username;\n\n\t\tif (!hostId) {\n\t\t\t// Not a host\n\t\t\t_isHost = false;\n\n\t\t\t// TODO: Show loading screen till connection is created\n\t\t\tif (!username) {\n\t\t\t\t// ask for username\n\t\t\t\tconst usernamePrompt = await Swal.fire({\n\t\t\t\t\ttitle: 'Enter your display name',\n\t\t\t\t\tinput: 'text',\n\t\t\t\t\tallowOutsideClick: false,\n\t\t\t\t});\n\t\t\t\tusername = usernamePrompt.value;\n\t\t\t}\n\n\t\t\tconst roomId = props.match.params.id;\n\t\t\t_socket = await createConnection(username, roomId);\n\t\t\tconsole.log(\"fdf\",videoURL)\n\t\t} else {\n\t\t\t_isHost = true;\n\t\t\t_socket = props.location.socket;\n\n\t\t\t// update videoid in global context\n\t\t\tuserDispatch({ type: 'UPDATE_VIDEO_ID', videoId });\n\t\t\tshowInviteModal();\n\t\t}\n\n\t\t// update username in global context\n\t\tuserDispatch({ type: 'UPDATE_USERNAME', username });\n\n\t\tsetHost(_isHost);\n\t\tsetSocket(_socket);\n\t\tbindSocketEvents(_socket, {\n\t\t\tuserDispatch,\n\t\t\tsignalDispatch,\n\t\t});\n\n\t\tconsole.log('is host', isHost);\n\t\tsetRoomLoading(false);\n\t};\n\n\tuseEffect(\n\t\t() => {\n\t\t\tinit();\n\t\t}, // eslint-disable-next-line\n\t\t[]\n\t);\n\n\tconst showInviteModal = async () => {\n\t\tawait Swal.fire({\n\t\t\ttitle: 'Invite friends with this link',\n\t\t\tinput: 'text',\n\t\t\tinputValue: window.location.href,\n\t\t\tconfirmButtonText: 'Copy',\n\t\t\tinputAttributes: {\n\t\t\t\treadOnly: true,\n\t\t\t},\n\t\t\twidth: '40%',\n\t\t\tonClose: () => {\n\t\t\t\tdocument.getElementsByClassName('swal2-input')[0].select();\n\t\t\t\tdocument.execCommand('copy');\n\t\t\t},\n\t\t});\n\t};\n\n\tconst askVideoURL = async () => {\n\t\tconst { value: url } = await Swal.fire({\n\t\t\ttitle: 'YouTube Video URL',\n\t\t\tinput: 'url',\n\t\t\tinputPlaceholder: 'https://www.youtube.com/watch?v=BTYAsjAVa3I',\n\t\t});\n\n\t\treturn url;\n\t};\n\n\tconst onVideoChange = async () => {\n\t\tconst newURL = await askVideoURL();\n\n\t\tif (newURL && socket) {\n\t\t\tconsole.log(_socket);\n\t\t\tconst videoId = getVideoId(newURL);\n\t\t\tsocket.emit('changeVideo', { videoId });\n\t\t}\n\t};\n\n\tconst alertNotImplemented = () => {\n\t\talert('Not implemented');\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Topbar />\n\t\t\t{roomLoading ? (\n\t\t\t\t<Spinner />\n\t\t\t) : (\n\t\t\t\t<Container fluid style={{ margin: '0 3%' }}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md={8}>\n\t\t\t\t\t\t\t<Player\n\t\t\t\t\t\t\t\tsocket={socket}\n\t\t\t\t\t\t\t\tvideoId={userData.videoId}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t\t<Options\n\t\t\t\t\t\t\t\tonInvite={showInviteModal}\n\t\t\t\t\t\t\t\talertNotImplemented={alertNotImplemented}\n\t\t\t\t\t\t\t\tonVideoChange={onVideoChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Chat socket={socket} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}